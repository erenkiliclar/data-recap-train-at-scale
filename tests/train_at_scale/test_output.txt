[1m============================= test session starts ==============================[0m
platform linux -- Python 3.10.6, pytest-7.3.1, pluggy-1.0.0 -- /home/eren/.pyenv/versions/3.10.6/envs/taxifare-env/bin/python3.10
cachedir: .pytest_cache
rootdir: /home/eren/code/erenkiliclar/data-recap-train-at-scale/tests
configfile: pytest_kitt.ini
[1mcollecting ... [0mcollected 8 items

tests/train_at_scale/test_clean.py::test_clean_data [32mPASSED[0m[32m               [ 12%][0m
tests/train_at_scale/test_main_local.py::TestMainLocal::test_route_preprocess_and_train [31mFAILED[0m[31m [ 25%][0m
tests/train_at_scale/test_main_local.py::TestMainLocal::test_route_pred [31mFAILED[0m[31m [ 37%][0m
tests/train_at_scale/test_main_local.py::TestMainLocal::test_route_preprocess [31mFAILED[0m[31m [ 50%][0m
tests/train_at_scale/test_main_local.py::TestMainLocal::test_route_train [32mPASSED[0m[31m [ 62%][0m
tests/train_at_scale/test_model.py::test_model_can_fit [32mPASSED[0m[31m            [ 75%][0m
tests/train_at_scale/test_notebook.py::TestNotebook::test_y_pred [32mPASSED[0m[31m  [ 87%][0m
tests/train_at_scale/test_processor_pipeline.py::test_preprocess_features [32mPASSED[0m[31m [100%][0m

=================================== FAILURES ===================================
[31m[1m________________ TestMainLocal.test_route_preprocess_and_train _________________[0m

self = <tests.train_at_scale.test_main_local.TestMainLocal object at 0x7f2d0102e8f0>

    [94mdef[39;49;00m [92mtest_route_preprocess_and_train[39;49;00m([96mself[39;49;00m):[90m[39;49;00m
    [90m[39;49;00m
        [90m# 1) SETUP[39;49;00m[90m[39;49;00m
        data_query_path = Path(LOCAL_DATA_PATH).joinpath([33m"[39;49;00m[33mraw[39;49;00m[33m"[39;49;00m,[33mf[39;49;00m[33m"[39;49;00m[33mquery_[39;49;00m[33m{[39;49;00mMIN_DATE[33m}[39;49;00m[33m_[39;49;00m[33m{[39;49;00mMAX_DATE[33m}[39;49;00m[33m_[39;49;00m[33m{[39;49;00mDATA_SIZE[33m}[39;49;00m[33m.csv[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
        data_query_exists = data_query_path.is_file()[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m data_query_exists:[90m[39;49;00m
            [90m# We start from a blank state. No cached files[39;49;00m[90m[39;49;00m
            shutil.copyfile(data_query_path, [33mf[39;49;00m[33m'[39;49;00m[33m{[39;49;00mdata_query_path[33m}[39;49;00m[33m_backup[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
            data_query_path.unlink()[90m[39;49;00m
    [90m[39;49;00m
        [90m# 2) ACT[39;49;00m[90m[39;49;00m
        [94mfrom[39;49;00m [04m[96mtaxifare[39;49;00m[04m[96m.[39;49;00m[04m[96minterface[39;49;00m[04m[96m.[39;49;00m[04m[96mmain_local[39;49;00m [94mimport[39;49;00m preprocess_and_train[90m[39;49;00m
    [90m[39;49;00m
        [90m# Check route runs correctly[39;49;00m[90m[39;49;00m
>       preprocess_and_train(min_date=MIN_DATE, max_date=MAX_DATE)[90m[39;49;00m

[1m[31mtests/train_at_scale/test_main_local.py[0m:36: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[1m[31mtaxifare/interface/main_local.py[0m:50: in preprocess_and_train
    query_job = client.query(query)[90m[39;49;00m
[1m[31m../../../.pyenv/versions/3.10.6/envs/taxifare-env/lib/python3.10/site-packages/google/cloud/bigquery/client.py[0m:3403: in query
    [94mreturn[39;49;00m _job_helpers.query_jobs_insert([90m[39;49;00m
[1m[31m../../../.pyenv/versions/3.10.6/envs/taxifare-env/lib/python3.10/site-packages/google/cloud/bigquery/_job_helpers.py[0m:114: in query_jobs_insert
    future = do_query()[90m[39;49;00m
[1m[31m../../../.pyenv/versions/3.10.6/envs/taxifare-env/lib/python3.10/site-packages/google/cloud/bigquery/_job_helpers.py[0m:91: in do_query
    query_job._begin(retry=retry, timeout=timeout)[90m[39;49;00m
[1m[31m../../../.pyenv/versions/3.10.6/envs/taxifare-env/lib/python3.10/site-packages/google/cloud/bigquery/job/query.py[0m:1310: in _begin
    [96msuper[39;49;00m(QueryJob, [96mself[39;49;00m)._begin(client=client, retry=retry, timeout=timeout)[90m[39;49;00m
[1m[31m../../../.pyenv/versions/3.10.6/envs/taxifare-env/lib/python3.10/site-packages/google/cloud/bigquery/job/base.py[0m:693: in _begin
    api_response = client._call_api([90m[39;49;00m
[1m[31m../../../.pyenv/versions/3.10.6/envs/taxifare-env/lib/python3.10/site-packages/google/cloud/bigquery/client.py[0m:813: in _call_api
    [94mreturn[39;49;00m call()[90m[39;49;00m
[1m[31m../../../.pyenv/versions/3.10.6/envs/taxifare-env/lib/python3.10/site-packages/google/api_core/retry.py[0m:349: in retry_wrapped_func
    [94mreturn[39;49;00m retry_target([90m[39;49;00m
[1m[31m../../../.pyenv/versions/3.10.6/envs/taxifare-env/lib/python3.10/site-packages/google/api_core/retry.py[0m:191: in retry_target
    [94mreturn[39;49;00m target()[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <google.cloud.bigquery._http.Connection object at 0x7f2cfb16a9b0>
method = 'POST', path = '/projects/<your project id>/jobs', query_params = None
data = '{"jobReference": {"jobId": "39e24e58-facd-477b-9575-8a0e88c55755", "projectId": "<your project id>"}, "configuration"...     WHERE pickup_datetime BETWEEN \'2009-01-01\' AND \'2015-01-01\'\\n        ORDER BY pickup_datetime\\n        "}}}'
content_type = 'application/json', headers = None, api_base_url = None
api_version = None, expect_json = True, _target_object = None, timeout = None
extra_api_info = None

    [94mdef[39;49;00m [92mapi_request[39;49;00m([90m[39;49;00m
        [96mself[39;49;00m,[90m[39;49;00m
        method,[90m[39;49;00m
        path,[90m[39;49;00m
        query_params=[94mNone[39;49;00m,[90m[39;49;00m
        data=[94mNone[39;49;00m,[90m[39;49;00m
        content_type=[94mNone[39;49;00m,[90m[39;49;00m
        headers=[94mNone[39;49;00m,[90m[39;49;00m
        api_base_url=[94mNone[39;49;00m,[90m[39;49;00m
        api_version=[94mNone[39;49;00m,[90m[39;49;00m
        expect_json=[94mTrue[39;49;00m,[90m[39;49;00m
        _target_object=[94mNone[39;49;00m,[90m[39;49;00m
        timeout=_DEFAULT_TIMEOUT,[90m[39;49;00m
        extra_api_info=[94mNone[39;49;00m,[90m[39;49;00m
    ):[90m[39;49;00m
    [90m    [39;49;00m[33m"""Make a request over the HTTP transport to the API.[39;49;00m
    [33m[39;49;00m
    [33m    You shouldn't need to use this method, but if you plan to[39;49;00m
    [33m    interact with the API using these primitives, this is the[39;49;00m
    [33m    correct one to use.[39;49;00m
    [33m[39;49;00m
    [33m    :type method: str[39;49;00m
    [33m    :param method: The HTTP method name (ie, ``GET``, ``POST``, etc).[39;49;00m
    [33m                   Required.[39;49;00m
    [33m[39;49;00m
    [33m    :type path: str[39;49;00m
    [33m    :param path: The path to the resource (ie, ``'/b/bucket-name'``).[39;49;00m
    [33m                 Required.[39;49;00m
    [33m[39;49;00m
    [33m    :type query_params: dict or list[39;49;00m
    [33m    :param query_params: A dictionary of keys and values (or list of[39;49;00m
    [33m                         key-value pairs) to insert into the query[39;49;00m
    [33m                         string of the URL.[39;49;00m
    [33m[39;49;00m
    [33m    :type data: str[39;49;00m
    [33m    :param data: The data to send as the body of the request. Default is[39;49;00m
    [33m                 the empty string.[39;49;00m
    [33m[39;49;00m
    [33m    :type content_type: str[39;49;00m
    [33m    :param content_type: The proper MIME type of the data provided. Default[39;49;00m
    [33m                         is None.[39;49;00m
    [33m[39;49;00m
    [33m    :type headers: dict[39;49;00m
    [33m    :param headers: extra HTTP headers to be sent with the request.[39;49;00m
    [33m[39;49;00m
    [33m    :type api_base_url: str[39;49;00m
    [33m    :param api_base_url: The base URL for the API endpoint.[39;49;00m
    [33m                         Typically you won't have to provide this.[39;49;00m
    [33m                         Default is the standard API base URL.[39;49;00m
    [33m[39;49;00m
    [33m    :type api_version: str[39;49;00m
    [33m    :param api_version: The version of the API to call.  Typically[39;49;00m
    [33m                        you shouldn't provide this and instead use[39;49;00m
    [33m                        the default for the library.  Default is the[39;49;00m
    [33m                        latest API version supported by[39;49;00m
    [33m                        google-cloud-python.[39;49;00m
    [33m[39;49;00m
    [33m    :type expect_json: bool[39;49;00m
    [33m    :param expect_json: If True, this method will try to parse the[39;49;00m
    [33m                        response as JSON and raise an exception if[39;49;00m
    [33m                        that cannot be done.  Default is True.[39;49;00m
    [33m[39;49;00m
    [33m    :type _target_object: :class:`object`[39;49;00m
    [33m    :param _target_object:[39;49;00m
    [33m        (Optional) Protected argument to be used by library callers. This[39;49;00m
    [33m        can allow custom behavior, for example, to defer an HTTP request[39;49;00m
    [33m        and complete initialization of the object at a later time.[39;49;00m
    [33m[39;49;00m
    [33m    :type timeout: float or tuple[39;49;00m
    [33m    :param timeout: (optional) The amount of time, in seconds, to wait[39;49;00m
    [33m        for the server response.[39;49;00m
    [33m[39;49;00m
    [33m        Can also be passed as a tuple (connect_timeout, read_timeout).[39;49;00m
    [33m        See :meth:`requests.Session.request` documentation for details.[39;49;00m
    [33m[39;49;00m
    [33m    :type extra_api_info: string[39;49;00m
    [33m    :param extra_api_info: (optional) Extra api info to be appended to[39;49;00m
    [33m        the X-Goog-API-Client header[39;49;00m
    [33m[39;49;00m
    [33m    :raises ~google.cloud.exceptions.GoogleCloudError: if the response code[39;49;00m
    [33m        is not 200 OK.[39;49;00m
    [33m    :raises ValueError: if the response content type is not JSON.[39;49;00m
    [33m    :rtype: dict or str[39;49;00m
    [33m    :returns: The API response payload, either as a raw string or[39;49;00m
    [33m              a dictionary if the response is valid JSON.[39;49;00m
    [33m    """[39;49;00m[90m[39;49;00m
        url = [96mself[39;49;00m.build_api_url([90m[39;49;00m
            path=path,[90m[39;49;00m
            query_params=query_params,[90m[39;49;00m
            api_base_url=api_base_url,[90m[39;49;00m
            api_version=api_version,[90m[39;49;00m
        )[90m[39;49;00m
    [90m[39;49;00m
        [90m# Making the executive decision that any dictionary[39;49;00m[90m[39;49;00m
        [90m# data will be sent properly as JSON.[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m data [95mand[39;49;00m [96misinstance[39;49;00m(data, [96mdict[39;49;00m):[90m[39;49;00m
            data = json.dumps(data)[90m[39;49;00m
            content_type = [33m"[39;49;00m[33mapplication/json[39;49;00m[33m"[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        response = [96mself[39;49;00m._make_request([90m[39;49;00m
            method=method,[90m[39;49;00m
            url=url,[90m[39;49;00m
            data=data,[90m[39;49;00m
            content_type=content_type,[90m[39;49;00m
            headers=headers,[90m[39;49;00m
            target_object=_target_object,[90m[39;49;00m
            timeout=timeout,[90m[39;49;00m
            extra_api_info=extra_api_info,[90m[39;49;00m
        )[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m [95mnot[39;49;00m [94m200[39;49;00m <= response.status_code < [94m300[39;49;00m:[90m[39;49;00m
>           [94mraise[39;49;00m exceptions.from_http_response(response)[90m[39;49;00m
[1m[31mE           google.api_core.exceptions.BadRequest: 400 POST https://bigquery.googleapis.com/bigquery/v2/projects/%3Cyour%20project%20id%3E/jobs?prettyPrint=false: ProjectId and DatasetId must be non-empty[0m
[1m[31mE           [0m
[1m[31mE           Location: None[0m
[1m[31mE           Job ID: 39e24e58-facd-477b-9575-8a0e88c55755[0m

[1m[31m../../../.pyenv/versions/3.10.6/envs/taxifare-env/lib/python3.10/site-packages/google/cloud/_http/__init__.py[0m:494: BadRequest
----------------------------- Captured stdout call -----------------------------
[34m
Loading TensorFlow...[0m

✅ TensorFlow loaded (0.0s)
[35m
 ⭐️ Use case: preprocess_and_train[0m
Loading data from Querying Big Query server...
----------------------------- Captured stderr call -----------------------------
2023-06-01 22:49:22.394206: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-06-01 22:49:23.025258: I tensorflow/core/util/util.cc:169] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-06-01 22:49:23.065025: W tensorflow/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory
2023-06-01 22:49:23.065057: I tensorflow/stream_executor/cuda/cudart_stub.cc:29] Ignore above cudart dlerror if you do not have a GPU set up on your machine.
2023-06-01 22:49:23.130368: E tensorflow/stream_executor/cuda/cuda_blas.cc:2981] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered
2023-06-01 22:49:24.293467: W tensorflow/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory
2023-06-01 22:49:24.293898: W tensorflow/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory
2023-06-01 22:49:24.293946: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
[31m[1m________________________ TestMainLocal.test_route_pred _________________________[0m

self = <tests.train_at_scale.test_main_local.TestMainLocal object at 0x7f2d0102e890>

    [94mdef[39;49;00m [92mtest_route_pred[39;49;00m([96mself[39;49;00m):[90m[39;49;00m
        [94mfrom[39;49;00m [04m[96mtaxifare[39;49;00m[04m[96m.[39;49;00m[04m[96minterface[39;49;00m[04m[96m.[39;49;00m[04m[96mmain_local[39;49;00m [94mimport[39;49;00m pred[90m[39;49;00m
    [90m[39;49;00m
>       y_pred = pred()[90m[39;49;00m

[1m[31mtests/train_at_scale/test_main_local.py[0m:60: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

X_pred =             pickup_datetime  ...  passenger_count
0 2013-07-06 17:18:00+00:00  ...                1

[1 rows x 6 columns]

    [94mdef[39;49;00m [92mpred[39;49;00m(X_pred: pd.DataFrame = [94mNone[39;49;00m) -> np.ndarray:[90m[39;49;00m
        [96mprint[39;49;00m(Fore.MAGENTA + [33m"[39;49;00m[33m\n[39;49;00m[33m ⭐️ Use case: pred[39;49;00m[33m"[39;49;00m + Style.RESET_ALL)[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m X_pred [95mis[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            X_pred = pd.DataFrame([96mdict[39;49;00m([90m[39;49;00m
                pickup_datetime=[pd.Timestamp([33m"[39;49;00m[33m2013-07-06 17:18:00[39;49;00m[33m"[39;49;00m, tz=[33m'[39;49;00m[33mUTC[39;49;00m[33m'[39;49;00m)],[90m[39;49;00m
                pickup_longitude=[-[94m73.950655[39;49;00m],[90m[39;49;00m
                pickup_latitude=[[94m40.783282[39;49;00m],[90m[39;49;00m
                dropoff_longitude=[-[94m73.984365[39;49;00m],[90m[39;49;00m
                dropoff_latitude=[[94m40.769802[39;49;00m],[90m[39;49;00m
                passenger_count=[[94m1[39;49;00m],[90m[39;49;00m
            ))[90m[39;49;00m
    [90m[39;49;00m
        model = load_model()[90m[39;49;00m
        X_processed = preprocess_features(X_pred)[90m[39;49;00m
>       y_pred = model.predict(X_processed)[90m[39;49;00m
[1m[31mE       AttributeError: 'NoneType' object has no attribute 'predict'[0m

[1m[31mtaxifare/interface/main_local.py[0m:292: AttributeError
----------------------------- Captured stdout call -----------------------------
[35m
 ⭐️ Use case: pred[0m
[34m
Load latest model from local registry...[0m
[34m
Preprocessing features...[0m
✅ X_processed, with shape (1, 65)
[31m[1m_____________________ TestMainLocal.test_route_preprocess ______________________[0m

self = <tests.train_at_scale.test_main_local.TestMainLocal object at 0x7f2d0102e5c0>
fixture_query_1k =      fare_amount           pickup_datetime  ...  dropoff_latitude  passenger_count
0            8.9 2009-01-15 09:22:3...           4
454          8.5 2014-12-27 16:47:42+00:00  ...         40.771263                4

[455 rows x 7 columns]
fixture_processed_1k =            0    1    2    3    4    5   ...   60   61   62   63   64         65
0    0.000000  0.0  0.0  0.0  1.0  0.0...0.0   6.500000
446  0.428571  0.0  0.0  0.0  0.0  0.0  ...  0.0  0.0  0.0  0.0  0.0   8.500000

[447 rows x 66 columns]

    [94mdef[39;49;00m [92mtest_route_preprocess[39;49;00m([96mself[39;49;00m, fixture_query_1k: pd.DataFrame, fixture_processed_1k: pd.DataFrame):[90m[39;49;00m
        [94mfrom[39;49;00m [04m[96mtaxifare[39;49;00m[04m[96m.[39;49;00m[04m[96minterface[39;49;00m[04m[96m.[39;49;00m[04m[96mmain_local[39;49;00m [94mimport[39;49;00m preprocess[90m[39;49;00m
    [90m[39;49;00m
        data_query_path = Path(LOCAL_DATA_PATH).joinpath([33m"[39;49;00m[33mraw[39;49;00m[33m"[39;49;00m,[33mf[39;49;00m[33m"[39;49;00m[33mquery_[39;49;00m[33m{[39;49;00mMIN_DATE[33m}[39;49;00m[33m_[39;49;00m[33m{[39;49;00mMAX_DATE[33m}[39;49;00m[33m_[39;49;00m[33m{[39;49;00mDATA_SIZE[33m}[39;49;00m[33m.csv[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
        data_processed_path = Path(LOCAL_DATA_PATH).joinpath([33m"[39;49;00m[33mprocessed[39;49;00m[33m"[39;49;00m,[33mf[39;49;00m[33m"[39;49;00m[33mprocessed_[39;49;00m[33m{[39;49;00mMIN_DATE[33m}[39;49;00m[33m_[39;49;00m[33m{[39;49;00mMAX_DATE[33m}[39;49;00m[33m_[39;49;00m[33m{[39;49;00mDATA_SIZE[33m}[39;49;00m[33m.csv[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
    [90m[39;49;00m
        data_query_exists = data_query_path.is_file()[90m[39;49;00m
        data_processed_exists = data_processed_path.is_file()[90m[39;49;00m
    [90m[39;49;00m
        [90m# SETUP[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m data_query_exists:[90m[39;49;00m
            shutil.copyfile(data_query_path, [33mf[39;49;00m[33m'[39;49;00m[33m{[39;49;00mdata_query_path[33m}[39;49;00m[33m_backup[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
            data_query_path.unlink()[90m[39;49;00m
        [94mif[39;49;00m data_processed_exists:[90m[39;49;00m
            shutil.copyfile(data_processed_path, [33mf[39;49;00m[33m'[39;49;00m[33m{[39;49;00mdata_processed_path[33m}[39;49;00m[33m_backup[39;49;00m[33m'[39;49;00m)[90m[39;49;00m
            data_processed_path.unlink()[90m[39;49;00m
    [90m[39;49;00m
        [90m# ACT[39;49;00m[90m[39;49;00m
        [90m# Check route runs querying Big Query[39;49;00m[90m[39;49;00m
>       preprocess(min_date=MIN_DATE, max_date=MAX_DATE)[90m[39;49;00m

[1m[31mtests/train_at_scale/test_main_local.py[0m:85: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
[1m[31mtaxifare/interface/main_local.py[0m:151: in preprocess
    query_job = client.query(query)[90m[39;49;00m
[1m[31m../../../.pyenv/versions/3.10.6/envs/taxifare-env/lib/python3.10/site-packages/google/cloud/bigquery/client.py[0m:3403: in query
    [94mreturn[39;49;00m _job_helpers.query_jobs_insert([90m[39;49;00m
[1m[31m../../../.pyenv/versions/3.10.6/envs/taxifare-env/lib/python3.10/site-packages/google/cloud/bigquery/_job_helpers.py[0m:114: in query_jobs_insert
    future = do_query()[90m[39;49;00m
[1m[31m../../../.pyenv/versions/3.10.6/envs/taxifare-env/lib/python3.10/site-packages/google/cloud/bigquery/_job_helpers.py[0m:91: in do_query
    query_job._begin(retry=retry, timeout=timeout)[90m[39;49;00m
[1m[31m../../../.pyenv/versions/3.10.6/envs/taxifare-env/lib/python3.10/site-packages/google/cloud/bigquery/job/query.py[0m:1310: in _begin
    [96msuper[39;49;00m(QueryJob, [96mself[39;49;00m)._begin(client=client, retry=retry, timeout=timeout)[90m[39;49;00m
[1m[31m../../../.pyenv/versions/3.10.6/envs/taxifare-env/lib/python3.10/site-packages/google/cloud/bigquery/job/base.py[0m:693: in _begin
    api_response = client._call_api([90m[39;49;00m
[1m[31m../../../.pyenv/versions/3.10.6/envs/taxifare-env/lib/python3.10/site-packages/google/cloud/bigquery/client.py[0m:813: in _call_api
    [94mreturn[39;49;00m call()[90m[39;49;00m
[1m[31m../../../.pyenv/versions/3.10.6/envs/taxifare-env/lib/python3.10/site-packages/google/api_core/retry.py[0m:349: in retry_wrapped_func
    [94mreturn[39;49;00m retry_target([90m[39;49;00m
[1m[31m../../../.pyenv/versions/3.10.6/envs/taxifare-env/lib/python3.10/site-packages/google/api_core/retry.py[0m:191: in retry_target
    [94mreturn[39;49;00m target()[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <google.cloud.bigquery._http.Connection object at 0x7f2ca3dc9870>
method = 'POST', path = '/projects/<your project id>/jobs', query_params = None
data = '{"jobReference": {"jobId": "83cc7c43-9582-4a6e-bbad-81b1d71c4ee5", "projectId": "<your project id>"}, "configuration"...     WHERE pickup_datetime BETWEEN \'2009-01-01\' AND \'2015-01-01\'\\n        ORDER BY pickup_datetime\\n        "}}}'
content_type = 'application/json', headers = None, api_base_url = None
api_version = None, expect_json = True, _target_object = None, timeout = None
extra_api_info = None

    [94mdef[39;49;00m [92mapi_request[39;49;00m([90m[39;49;00m
        [96mself[39;49;00m,[90m[39;49;00m
        method,[90m[39;49;00m
        path,[90m[39;49;00m
        query_params=[94mNone[39;49;00m,[90m[39;49;00m
        data=[94mNone[39;49;00m,[90m[39;49;00m
        content_type=[94mNone[39;49;00m,[90m[39;49;00m
        headers=[94mNone[39;49;00m,[90m[39;49;00m
        api_base_url=[94mNone[39;49;00m,[90m[39;49;00m
        api_version=[94mNone[39;49;00m,[90m[39;49;00m
        expect_json=[94mTrue[39;49;00m,[90m[39;49;00m
        _target_object=[94mNone[39;49;00m,[90m[39;49;00m
        timeout=_DEFAULT_TIMEOUT,[90m[39;49;00m
        extra_api_info=[94mNone[39;49;00m,[90m[39;49;00m
    ):[90m[39;49;00m
    [90m    [39;49;00m[33m"""Make a request over the HTTP transport to the API.[39;49;00m
    [33m[39;49;00m
    [33m    You shouldn't need to use this method, but if you plan to[39;49;00m
    [33m    interact with the API using these primitives, this is the[39;49;00m
    [33m    correct one to use.[39;49;00m
    [33m[39;49;00m
    [33m    :type method: str[39;49;00m
    [33m    :param method: The HTTP method name (ie, ``GET``, ``POST``, etc).[39;49;00m
    [33m                   Required.[39;49;00m
    [33m[39;49;00m
    [33m    :type path: str[39;49;00m
    [33m    :param path: The path to the resource (ie, ``'/b/bucket-name'``).[39;49;00m
    [33m                 Required.[39;49;00m
    [33m[39;49;00m
    [33m    :type query_params: dict or list[39;49;00m
    [33m    :param query_params: A dictionary of keys and values (or list of[39;49;00m
    [33m                         key-value pairs) to insert into the query[39;49;00m
    [33m                         string of the URL.[39;49;00m
    [33m[39;49;00m
    [33m    :type data: str[39;49;00m
    [33m    :param data: The data to send as the body of the request. Default is[39;49;00m
    [33m                 the empty string.[39;49;00m
    [33m[39;49;00m
    [33m    :type content_type: str[39;49;00m
    [33m    :param content_type: The proper MIME type of the data provided. Default[39;49;00m
    [33m                         is None.[39;49;00m
    [33m[39;49;00m
    [33m    :type headers: dict[39;49;00m
    [33m    :param headers: extra HTTP headers to be sent with the request.[39;49;00m
    [33m[39;49;00m
    [33m    :type api_base_url: str[39;49;00m
    [33m    :param api_base_url: The base URL for the API endpoint.[39;49;00m
    [33m                         Typically you won't have to provide this.[39;49;00m
    [33m                         Default is the standard API base URL.[39;49;00m
    [33m[39;49;00m
    [33m    :type api_version: str[39;49;00m
    [33m    :param api_version: The version of the API to call.  Typically[39;49;00m
    [33m                        you shouldn't provide this and instead use[39;49;00m
    [33m                        the default for the library.  Default is the[39;49;00m
    [33m                        latest API version supported by[39;49;00m
    [33m                        google-cloud-python.[39;49;00m
    [33m[39;49;00m
    [33m    :type expect_json: bool[39;49;00m
    [33m    :param expect_json: If True, this method will try to parse the[39;49;00m
    [33m                        response as JSON and raise an exception if[39;49;00m
    [33m                        that cannot be done.  Default is True.[39;49;00m
    [33m[39;49;00m
    [33m    :type _target_object: :class:`object`[39;49;00m
    [33m    :param _target_object:[39;49;00m
    [33m        (Optional) Protected argument to be used by library callers. This[39;49;00m
    [33m        can allow custom behavior, for example, to defer an HTTP request[39;49;00m
    [33m        and complete initialization of the object at a later time.[39;49;00m
    [33m[39;49;00m
    [33m    :type timeout: float or tuple[39;49;00m
    [33m    :param timeout: (optional) The amount of time, in seconds, to wait[39;49;00m
    [33m        for the server response.[39;49;00m
    [33m[39;49;00m
    [33m        Can also be passed as a tuple (connect_timeout, read_timeout).[39;49;00m
    [33m        See :meth:`requests.Session.request` documentation for details.[39;49;00m
    [33m[39;49;00m
    [33m    :type extra_api_info: string[39;49;00m
    [33m    :param extra_api_info: (optional) Extra api info to be appended to[39;49;00m
    [33m        the X-Goog-API-Client header[39;49;00m
    [33m[39;49;00m
    [33m    :raises ~google.cloud.exceptions.GoogleCloudError: if the response code[39;49;00m
    [33m        is not 200 OK.[39;49;00m
    [33m    :raises ValueError: if the response content type is not JSON.[39;49;00m
    [33m    :rtype: dict or str[39;49;00m
    [33m    :returns: The API response payload, either as a raw string or[39;49;00m
    [33m              a dictionary if the response is valid JSON.[39;49;00m
    [33m    """[39;49;00m[90m[39;49;00m
        url = [96mself[39;49;00m.build_api_url([90m[39;49;00m
            path=path,[90m[39;49;00m
            query_params=query_params,[90m[39;49;00m
            api_base_url=api_base_url,[90m[39;49;00m
            api_version=api_version,[90m[39;49;00m
        )[90m[39;49;00m
    [90m[39;49;00m
        [90m# Making the executive decision that any dictionary[39;49;00m[90m[39;49;00m
        [90m# data will be sent properly as JSON.[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m data [95mand[39;49;00m [96misinstance[39;49;00m(data, [96mdict[39;49;00m):[90m[39;49;00m
            data = json.dumps(data)[90m[39;49;00m
            content_type = [33m"[39;49;00m[33mapplication/json[39;49;00m[33m"[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        response = [96mself[39;49;00m._make_request([90m[39;49;00m
            method=method,[90m[39;49;00m
            url=url,[90m[39;49;00m
            data=data,[90m[39;49;00m
            content_type=content_type,[90m[39;49;00m
            headers=headers,[90m[39;49;00m
            target_object=_target_object,[90m[39;49;00m
            timeout=timeout,[90m[39;49;00m
            extra_api_info=extra_api_info,[90m[39;49;00m
        )[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m [95mnot[39;49;00m [94m200[39;49;00m <= response.status_code < [94m300[39;49;00m:[90m[39;49;00m
>           [94mraise[39;49;00m exceptions.from_http_response(response)[90m[39;49;00m
[1m[31mE           google.api_core.exceptions.BadRequest: 400 POST https://bigquery.googleapis.com/bigquery/v2/projects/%3Cyour%20project%20id%3E/jobs?prettyPrint=false: ProjectId and DatasetId must be non-empty[0m
[1m[31mE           [0m
[1m[31mE           Location: None[0m
[1m[31mE           Job ID: 83cc7c43-9582-4a6e-bbad-81b1d71c4ee5[0m

[1m[31m../../../.pyenv/versions/3.10.6/envs/taxifare-env/lib/python3.10/site-packages/google/cloud/_http/__init__.py[0m:494: BadRequest
----------------------------- Captured stdout call -----------------------------
[35m
 ⭐️ Use case: preprocess by batch[0m
Get a DataFrame iterable from querying the BigQuery server...
[36m[1m=========================== short test summary info ============================[0m
[31mFAILED[0m tests/train_at_scale/test_main_local.py::[1mTestMainLocal::test_route_preprocess_and_train[0m - google.api_core.exceptions.BadRequest: 400 POST https://bigquery.googleapis...
[31mFAILED[0m tests/train_at_scale/test_main_local.py::[1mTestMainLocal::test_route_pred[0m - AttributeError: 'NoneType' object has no attribute 'predict'
[31mFAILED[0m tests/train_at_scale/test_main_local.py::[1mTestMainLocal::test_route_preprocess[0m - google.api_core.exceptions.BadRequest: 400 POST https://bigquery.googleapis...
[31m=================== [31m[1m3 failed[0m, [32m5 passed[0m, [33m6 warnings[0m[31m in 16.87s[0m[31m ===================[0m
